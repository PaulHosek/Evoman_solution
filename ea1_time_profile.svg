<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="314" onload="init(evt)" viewBox="0 0 1200 314" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="314" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python ea1_demo.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="303.00"> </text><svg id="frames" x="10" width="1180" total_samples="45911"><g><title>add_image (tmx.py:91) (103 samples, 0.22%)</title><rect x="0.1329%" y="244" width="0.2243%" height="15" fill="rgb(227,0,7)" fg:x="61" fg:w="103"/><text x="0.3829%" y="254.50"></text></g><g><title>fromxml (tmx.py:84) (128 samples, 0.28%)</title><rect x="0.1307%" y="228" width="0.2788%" height="15" fill="rgb(217,0,24)" fg:x="60" fg:w="128"/><text x="0.3807%" y="238.50"></text></g><g><title>load (tmx.py:724) (141 samples, 0.31%)</title><rect x="0.1046%" y="212" width="0.3071%" height="15" fill="rgb(221,193,54)" fg:x="48" fg:w="141"/><text x="0.3546%" y="222.50"></text></g><g><title>load (tmx.py:727) (93 samples, 0.20%)</title><rect x="0.4117%" y="212" width="0.2026%" height="15" fill="rgb(248,212,6)" fg:x="189" fg:w="93"/><text x="0.6617%" y="222.50"></text></g><g><title>fromxml (tmx.py:269) (86 samples, 0.19%)</title><rect x="0.4269%" y="228" width="0.1873%" height="15" fill="rgb(208,68,35)" fg:x="196" fg:w="86"/><text x="0.6769%" y="238.50"></text></g><g><title>load_sprites (environment.py:131) (253 samples, 0.55%)</title><rect x="0.0697%" y="180" width="0.5511%" height="15" fill="rgb(232,128,0)" fg:x="32" fg:w="253"/><text x="0.3197%" y="190.50"></text></g><g><title>load (tmx.py:848) (245 samples, 0.53%)</title><rect x="0.0871%" y="196" width="0.5336%" height="15" fill="rgb(207,160,47)" fg:x="40" fg:w="245"/><text x="0.3371%" y="206.50"></text></g><g><title>__init__ (player.py:80) (63 samples, 0.14%)</title><rect x="0.7101%" y="196" width="0.1372%" height="15" fill="rgb(228,23,34)" fg:x="326" fg:w="63"/><text x="0.9601%" y="206.50"></text></g><g><title>__init__ (Base/SpriteDefinition.py:8) (63 samples, 0.14%)</title><rect x="0.7101%" y="212" width="0.1372%" height="15" fill="rgb(218,30,26)" fg:x="326" fg:w="63"/><text x="0.9601%" y="222.50"></text></g><g><title>run_single (environment.py:427) (359 samples, 0.78%)</title><rect x="0.0697%" y="164" width="0.7819%" height="15" fill="rgb(220,122,19)" fg:x="32" fg:w="359"/><text x="0.3197%" y="174.50"></text></g><g><title>load_sprites (environment.py:141) (68 samples, 0.15%)</title><rect x="0.7035%" y="180" width="0.1481%" height="15" fill="rgb(250,228,42)" fg:x="323" fg:w="68"/><text x="0.9535%" y="190.50"></text></g><g><title>run_single (environment.py:467) (253 samples, 0.55%)</title><rect x="1.0346%" y="164" width="0.5511%" height="15" fill="rgb(240,193,28)" fg:x="475" fg:w="253"/><text x="1.2846%" y="174.50"></text></g><g><title>run_single (environment.py:475) (1,225 samples, 2.67%)</title><rect x="1.6140%" y="164" width="2.6682%" height="15" fill="rgb(216,20,37)" fg:x="741" fg:w="1225"/><text x="1.8640%" y="174.50">ru..</text></g><g><title>update (pygame/sprite.py:538) (65 samples, 0.14%)</title><rect x="4.6568%" y="196" width="0.1416%" height="15" fill="rgb(206,188,39)" fg:x="2138" fg:w="65"/><text x="4.9068%" y="206.50"></text></g><g><title>collide (tmx.py:594) (57 samples, 0.12%)</title><rect x="5.2253%" y="228" width="0.1242%" height="15" fill="rgb(217,207,13)" fg:x="2399" fg:w="57"/><text x="5.4753%" y="238.50"></text></g><g><title>update (enemy1.py:174) (83 samples, 0.18%)</title><rect x="5.1948%" y="212" width="0.1808%" height="15" fill="rgb(231,73,38)" fg:x="2385" fg:w="83"/><text x="5.4448%" y="222.50"></text></g><g><title>update (enemy4.py:134) (47 samples, 0.10%)</title><rect x="5.7328%" y="212" width="0.1024%" height="15" fill="rgb(225,20,46)" fg:x="2632" fg:w="47"/><text x="5.9828%" y="222.50"></text></g><g><title>updateSprite (enemy4.py:244) (46 samples, 0.10%)</title><rect x="5.7350%" y="228" width="0.1002%" height="15" fill="rgb(210,31,41)" fg:x="2633" fg:w="46"/><text x="5.9850%" y="238.50"></text></g><g><title>collide (tmx.py:594) (68 samples, 0.15%)</title><rect x="6.0247%" y="228" width="0.1481%" height="15" fill="rgb(221,200,47)" fg:x="2766" fg:w="68"/><text x="6.2747%" y="238.50"></text></g><g><title>get_in_region (tmx.py:607) (52 samples, 0.11%)</title><rect x="6.0595%" y="244" width="0.1133%" height="15" fill="rgb(226,26,5)" fg:x="2782" fg:w="52"/><text x="6.3095%" y="254.50"></text></g><g><title>update (enemy4.py:179) (134 samples, 0.29%)</title><rect x="5.9354%" y="212" width="0.2919%" height="15" fill="rgb(249,33,26)" fg:x="2725" fg:w="134"/><text x="6.1854%" y="222.50"></text></g><g><title>update (enemy4.py:227) (66 samples, 0.14%)</title><rect x="6.3471%" y="212" width="0.1438%" height="15" fill="rgb(235,183,28)" fg:x="2914" fg:w="66"/><text x="6.5971%" y="222.50"></text></g><g><title>updateSprite (enemy4.py:244) (62 samples, 0.14%)</title><rect x="6.3558%" y="228" width="0.1350%" height="15" fill="rgb(221,5,38)" fg:x="2918" fg:w="62"/><text x="6.6058%" y="238.50"></text></g><g><title>update (enemy4.py:237) (227 samples, 0.49%)</title><rect x="6.6106%" y="212" width="0.4944%" height="15" fill="rgb(247,18,42)" fg:x="3035" fg:w="227"/><text x="6.8606%" y="222.50"></text></g><g><title>update (enemy4.py:239) (240 samples, 0.52%)</title><rect x="7.1051%" y="212" width="0.5228%" height="15" fill="rgb(241,131,45)" fg:x="3262" fg:w="240"/><text x="7.3551%" y="222.50"></text></g><g><title>update (enemy8.py:191) (70 samples, 0.15%)</title><rect x="8.0787%" y="212" width="0.1525%" height="15" fill="rgb(249,31,29)" fg:x="3709" fg:w="70"/><text x="8.3287%" y="222.50"></text></g><g><title>updateSprite (enemy8.py:254) (69 samples, 0.15%)</title><rect x="8.0809%" y="228" width="0.1503%" height="15" fill="rgb(225,111,53)" fg:x="3710" fg:w="69"/><text x="8.3309%" y="238.50"></text></g><g><title>collide (tmx.py:594) (82 samples, 0.18%)</title><rect x="8.4359%" y="228" width="0.1786%" height="15" fill="rgb(238,160,17)" fg:x="3873" fg:w="82"/><text x="8.6859%" y="238.50"></text></g><g><title>get_in_region (tmx.py:607) (71 samples, 0.15%)</title><rect x="8.4598%" y="244" width="0.1546%" height="15" fill="rgb(214,148,48)" fg:x="3884" fg:w="71"/><text x="8.7098%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (tmx.py:607) (63 samples, 0.14%)</title><rect x="8.4773%" y="260" width="0.1372%" height="15" fill="rgb(232,36,49)" fg:x="3892" fg:w="63"/><text x="8.7273%" y="270.50"></text></g><g><title>update (enemy8.py:214) (140 samples, 0.30%)</title><rect x="8.3575%" y="212" width="0.3049%" height="15" fill="rgb(209,103,24)" fg:x="3837" fg:w="140"/><text x="8.6075%" y="222.50"></text></g><g><title>control (demo_controller.py:23) (632 samples, 1.38%)</title><rect x="9.2440%" y="228" width="1.3766%" height="15" fill="rgb(229,88,8)" fg:x="4244" fg:w="632"/><text x="9.4940%" y="238.50"></text></g><g><title>control (demo_controller.py:29) (143 samples, 0.31%)</title><rect x="10.6554%" y="228" width="0.3115%" height="15" fill="rgb(213,181,19)" fg:x="4892" fg:w="143"/><text x="10.9054%" y="238.50"></text></g><g><title>control (demo_controller.py:35) (830 samples, 1.81%)</title><rect x="11.0649%" y="228" width="1.8078%" height="15" fill="rgb(254,191,54)" fg:x="5080" fg:w="830"/><text x="11.3149%" y="238.50">c..</text></g><g><title>sigmoid_activation (demo_controller.py:12) (343 samples, 0.75%)</title><rect x="12.1256%" y="244" width="0.7471%" height="15" fill="rgb(241,83,37)" fg:x="5567" fg:w="343"/><text x="12.3756%" y="254.50"></text></g><g><title>control (demo_controller.py:42) (416 samples, 0.91%)</title><rect x="13.0470%" y="228" width="0.9061%" height="15" fill="rgb(233,36,39)" fg:x="5990" fg:w="416"/><text x="13.2970%" y="238.50"></text></g><g><title>sigmoid_activation (demo_controller.py:12) (205 samples, 0.45%)</title><rect x="13.5066%" y="244" width="0.4465%" height="15" fill="rgb(226,3,54)" fg:x="6201" fg:w="205"/><text x="13.7566%" y="254.50"></text></g><g><title>get (sensors.py:30) (69 samples, 0.15%)</title><rect x="14.4845%" y="228" width="0.1503%" height="15" fill="rgb(245,192,40)" fg:x="6650" fg:w="69"/><text x="14.7345%" y="238.50"></text></g><g><title>update (player.py:182) (2,868 samples, 6.25%)</title><rect x="9.0218%" y="212" width="6.2469%" height="15" fill="rgb(238,167,29)" fg:x="4142" fg:w="2868"/><text x="9.2718%" y="222.50">update (..</text></g><g><title>get (sensors.py:49) (239 samples, 0.52%)</title><rect x="14.7481%" y="228" width="0.5206%" height="15" fill="rgb(232,182,51)" fg:x="6771" fg:w="239"/><text x="14.9981%" y="238.50"></text></g><g><title>update (player.py:242) (84 samples, 0.18%)</title><rect x="15.6019%" y="212" width="0.1830%" height="15" fill="rgb(231,60,39)" fg:x="7163" fg:w="84"/><text x="15.8519%" y="222.50"></text></g><g><title>updateSprite (player.py:351) (76 samples, 0.17%)</title><rect x="15.6194%" y="228" width="0.1655%" height="15" fill="rgb(208,69,12)" fg:x="7171" fg:w="76"/><text x="15.8694%" y="238.50"></text></g><g><title>update (player.py:256) (75 samples, 0.16%)</title><rect x="15.9090%" y="212" width="0.1634%" height="15" fill="rgb(235,93,37)" fg:x="7304" fg:w="75"/><text x="16.1590%" y="222.50"></text></g><g><title>updateSprite (player.py:351) (70 samples, 0.15%)</title><rect x="15.9199%" y="228" width="0.1525%" height="15" fill="rgb(213,116,39)" fg:x="7309" fg:w="70"/><text x="16.1699%" y="238.50"></text></g><g><title>getImage (Base/SpriteDefinition.py:18) (56 samples, 0.12%)</title><rect x="16.1116%" y="244" width="0.1220%" height="15" fill="rgb(222,207,29)" fg:x="7397" fg:w="56"/><text x="16.3616%" y="254.50"></text></g><g><title>update (player.py:258) (120 samples, 0.26%)</title><rect x="16.0724%" y="212" width="0.2614%" height="15" fill="rgb(206,96,30)" fg:x="7379" fg:w="120"/><text x="16.3224%" y="222.50"></text></g><g><title>updateSprite (player.py:351) (114 samples, 0.25%)</title><rect x="16.0855%" y="228" width="0.2483%" height="15" fill="rgb(218,138,4)" fg:x="7385" fg:w="114"/><text x="16.3355%" y="238.50"></text></g><g><title>collide (tmx.py:594) (167 samples, 0.36%)</title><rect x="16.4470%" y="228" width="0.3637%" height="15" fill="rgb(250,191,14)" fg:x="7551" fg:w="167"/><text x="16.6970%" y="238.50"></text></g><g><title>get_in_region (tmx.py:607) (132 samples, 0.29%)</title><rect x="16.5233%" y="244" width="0.2875%" height="15" fill="rgb(239,60,40)" fg:x="7586" fg:w="132"/><text x="16.7733%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (tmx.py:607) (111 samples, 0.24%)</title><rect x="16.5690%" y="260" width="0.2418%" height="15" fill="rgb(206,27,48)" fg:x="7607" fg:w="111"/><text x="16.8190%" y="270.50"></text></g><g><title>update (player.py:265) (239 samples, 0.52%)</title><rect x="16.3338%" y="212" width="0.5206%" height="15" fill="rgb(225,35,8)" fg:x="7499" fg:w="239"/><text x="16.5838%" y="222.50"></text></g><g><title>update (player.py:292) (157 samples, 0.34%)</title><rect x="16.9458%" y="212" width="0.3420%" height="15" fill="rgb(250,213,24)" fg:x="7780" fg:w="157"/><text x="17.1958%" y="222.50"></text></g><g><title>__init__ (player.py:33) (145 samples, 0.32%)</title><rect x="16.9720%" y="228" width="0.3158%" height="15" fill="rgb(247,123,22)" fg:x="7792" fg:w="145"/><text x="17.2220%" y="238.50"></text></g><g><title>update (player.py:295) (93 samples, 0.20%)</title><rect x="17.2878%" y="212" width="0.2026%" height="15" fill="rgb(231,138,38)" fg:x="7937" fg:w="93"/><text x="17.5378%" y="222.50"></text></g><g><title>__init__ (player.py:35) (86 samples, 0.19%)</title><rect x="17.3030%" y="228" width="0.1873%" height="15" fill="rgb(231,145,46)" fg:x="7944" fg:w="86"/><text x="17.5530%" y="238.50"></text></g><g><title>update (player.py:319) (48 samples, 0.10%)</title><rect x="17.6232%" y="212" width="0.1046%" height="15" fill="rgb(251,118,11)" fg:x="8091" fg:w="48"/><text x="17.8732%" y="222.50"></text></g><g><title>updateSprite (player.py:351) (46 samples, 0.10%)</title><rect x="17.6276%" y="228" width="0.1002%" height="15" fill="rgb(217,147,25)" fg:x="8093" fg:w="46"/><text x="17.8776%" y="238.50"></text></g><g><title>collide (tmx.py:594) (106 samples, 0.23%)</title><rect x="17.9892%" y="228" width="0.2309%" height="15" fill="rgb(247,81,37)" fg:x="8259" fg:w="106"/><text x="18.2392%" y="238.50"></text></g><g><title>get_in_region (tmx.py:607) (84 samples, 0.18%)</title><rect x="18.0371%" y="244" width="0.1830%" height="15" fill="rgb(209,12,38)" fg:x="8281" fg:w="84"/><text x="18.2871%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (tmx.py:607) (71 samples, 0.15%)</title><rect x="18.0654%" y="260" width="0.1546%" height="15" fill="rgb(227,1,9)" fg:x="8294" fg:w="71"/><text x="18.3154%" y="270.50"></text></g><g><title>update (player.py:340) (164 samples, 0.36%)</title><rect x="17.9173%" y="212" width="0.3572%" height="15" fill="rgb(248,47,43)" fg:x="8226" fg:w="164"/><text x="18.1673%" y="222.50"></text></g><g><title>update (player.py:344) (191 samples, 0.42%)</title><rect x="18.2745%" y="212" width="0.4160%" height="15" fill="rgb(221,10,30)" fg:x="8390" fg:w="191"/><text x="18.5245%" y="222.50"></text></g><g><title>set_focus (tmx.py:798) (78 samples, 0.17%)</title><rect x="18.5206%" y="228" width="0.1699%" height="15" fill="rgb(210,229,1)" fg:x="8503" fg:w="78"/><text x="18.7706%" y="238.50"></text></g><g><title>update (pygame/sprite.py:539) (6,438 samples, 14.02%)</title><rect x="4.7984%" y="196" width="14.0228%" height="15" fill="rgb(222,148,37)" fg:x="2203" fg:w="6438"/><text x="5.0484%" y="206.50">update (pygame/sprite..</text></g><g><title>run_single (environment.py:476) (6,682 samples, 14.55%)</title><rect x="4.2822%" y="164" width="14.5542%" height="15" fill="rgb(234,67,33)" fg:x="1966" fg:w="6682"/><text x="4.5322%" y="174.50">run_single (environmen..</text></g><g><title>update (tmx.py:702) (6,630 samples, 14.44%)</title><rect x="4.3955%" y="180" width="14.4410%" height="15" fill="rgb(247,98,35)" fg:x="2018" fg:w="6630"/><text x="4.6455%" y="190.50">update (tmx.py:702)</text></g><g><title>draw (tmx.py:288) (51 samples, 0.11%)</title><rect x="19.0042%" y="196" width="0.1111%" height="15" fill="rgb(247,138,52)" fg:x="8725" fg:w="51"/><text x="19.2542%" y="206.50"></text></g><g><title>draw (tmx.py:290) (738 samples, 1.61%)</title><rect x="19.1741%" y="196" width="1.6075%" height="15" fill="rgb(213,79,30)" fg:x="8803" fg:w="738"/><text x="19.4241%" y="206.50"></text></g><g><title>draw (tmx.py:291) (849 samples, 1.85%)</title><rect x="20.7815%" y="196" width="1.8492%" height="15" fill="rgb(246,177,23)" fg:x="9541" fg:w="849"/><text x="21.0315%" y="206.50">d..</text></g><g><title>draw (tmx.py:292) (1,930 samples, 4.20%)</title><rect x="22.6307%" y="196" width="4.2038%" height="15" fill="rgb(230,62,27)" fg:x="10390" fg:w="1930"/><text x="22.8807%" y="206.50">draw ..</text></g><g><title>draw (tmx.py:294) (1,110 samples, 2.42%)</title><rect x="26.8367%" y="196" width="2.4177%" height="15" fill="rgb(216,154,8)" fg:x="12321" fg:w="1110"/><text x="27.0867%" y="206.50">dr..</text></g><g><title>draw (tmx.py:295) (30,333 samples, 66.07%)</title><rect x="29.2544%" y="196" width="66.0691%" height="15" fill="rgb(244,35,45)" fg:x="13431" fg:w="30333"/><text x="29.5044%" y="206.50">draw (tmx.py:295)</text></g><g><title>draw (tmx.py:637) (74 samples, 0.16%)</title><rect x="95.3802%" y="196" width="0.1612%" height="15" fill="rgb(251,115,12)" fg:x="43790" fg:w="74"/><text x="95.6302%" y="206.50"></text></g><g><title>draw (tmx.py:638) (47 samples, 0.10%)</title><rect x="95.5414%" y="196" width="0.1024%" height="15" fill="rgb(240,54,50)" fg:x="43864" fg:w="47"/><text x="95.7914%" y="206.50"></text></g><g><title>run_single (environment.py:477) (35,768 samples, 77.91%)</title><rect x="18.8364%" y="164" width="77.9073%" height="15" fill="rgb(233,84,52)" fg:x="8648" fg:w="35768"/><text x="19.0864%" y="174.50">run_single (environment.py:477)</text></g><g><title>draw (tmx.py:707) (35,733 samples, 77.83%)</title><rect x="18.9127%" y="180" width="77.8310%" height="15" fill="rgb(207,117,47)" fg:x="8683" fg:w="35733"/><text x="19.1627%" y="190.50">draw (tmx.py:707)</text></g><g><title>draw (tmx.py:643) (434 samples, 0.95%)</title><rect x="95.7984%" y="196" width="0.9453%" height="15" fill="rgb(249,43,39)" fg:x="43982" fg:w="434"/><text x="96.0484%" y="206.50"></text></g><g><title>run_single (environment.py:480) (90 samples, 0.20%)</title><rect x="96.7437%" y="164" width="0.1960%" height="15" fill="rgb(209,38,44)" fg:x="44416" fg:w="90"/><text x="96.9937%" y="174.50"></text></g><g><title>run_single (environment.py:481) (119 samples, 0.26%)</title><rect x="96.9397%" y="164" width="0.2592%" height="15" fill="rgb(236,212,23)" fg:x="44506" fg:w="119"/><text x="97.1897%" y="174.50"></text></g><g><title>run_single (environment.py:482) (61 samples, 0.13%)</title><rect x="97.1989%" y="164" width="0.1329%" height="15" fill="rgb(242,79,21)" fg:x="44625" fg:w="61"/><text x="97.4489%" y="174.50"></text></g><g><title>run_single (environment.py:483) (70 samples, 0.15%)</title><rect x="97.3318%" y="164" width="0.1525%" height="15" fill="rgb(211,96,35)" fg:x="44686" fg:w="70"/><text x="97.5818%" y="174.50"></text></g><g><title>run_single (environment.py:488) (62 samples, 0.14%)</title><rect x="97.6433%" y="164" width="0.1350%" height="15" fill="rgb(253,215,40)" fg:x="44829" fg:w="62"/><text x="97.8933%" y="174.50"></text></g><g><title>run_single (environment.py:489) (76 samples, 0.17%)</title><rect x="97.7783%" y="164" width="0.1655%" height="15" fill="rgb(211,81,21)" fg:x="44891" fg:w="76"/><text x="98.0283%" y="174.50"></text></g><g><title>run_single (environment.py:490) (77 samples, 0.17%)</title><rect x="97.9438%" y="164" width="0.1677%" height="15" fill="rgb(208,190,38)" fg:x="44967" fg:w="77"/><text x="98.1938%" y="174.50"></text></g><g><title>run_single (environment.py:491) (62 samples, 0.14%)</title><rect x="98.1116%" y="164" width="0.1350%" height="15" fill="rgb(235,213,38)" fg:x="45044" fg:w="62"/><text x="98.3616%" y="174.50"></text></g><g><title>run_single (environment.py:495) (337 samples, 0.73%)</title><rect x="98.2466%" y="164" width="0.7340%" height="15" fill="rgb(237,122,38)" fg:x="45106" fg:w="337"/><text x="98.4966%" y="174.50"></text></g><g><title>fitness_single (environment.py:389) (326 samples, 0.71%)</title><rect x="98.2706%" y="180" width="0.7101%" height="15" fill="rgb(244,218,35)" fg:x="45117" fg:w="326"/><text x="98.5206%" y="190.50"></text></g><g><title>run_single (environment.py:533) (47 samples, 0.10%)</title><rect x="99.0699%" y="164" width="0.1024%" height="15" fill="rgb(240,68,47)" fg:x="45484" fg:w="47"/><text x="99.3199%" y="174.50"></text></g><g><title>return_run (environment.py:500) (47 samples, 0.10%)</title><rect x="99.0699%" y="180" width="0.1024%" height="15" fill="rgb(210,16,53)" fg:x="45484" fg:w="47"/><text x="99.3199%" y="190.50"></text></g><g><title>run_single (environment.py:566) (105 samples, 0.23%)</title><rect x="99.2725%" y="164" width="0.2287%" height="15" fill="rgb(235,124,12)" fg:x="45577" fg:w="105"/><text x="99.5225%" y="174.50"></text></g><g><title>&lt;module&gt; (ea1_demo.py:198) (45,694 samples, 99.53%)</title><rect x="0.0087%" y="68" width="99.5273%" height="15" fill="rgb(224,169,11)" fg:x="4" fg:w="45694"/><text x="0.2587%" y="78.50">&lt;module&gt; (ea1_demo.py:198)</text></g><g><title>main (ea1_demo.py:170) (45,666 samples, 99.47%)</title><rect x="0.0697%" y="84" width="99.4664%" height="15" fill="rgb(250,166,2)" fg:x="32" fg:w="45666"/><text x="0.3197%" y="94.50">main (ea1_demo.py:170)</text></g><g><title>evaluate_pop (ea1_demo.py:70) (45,666 samples, 99.47%)</title><rect x="0.0697%" y="100" width="99.4664%" height="15" fill="rgb(242,216,29)" fg:x="32" fg:w="45666"/><text x="0.3197%" y="110.50">evaluate_pop (ea1_demo.py:70)</text></g><g><title>cust_evaluate (ea1_demo.py:59) (45,666 samples, 99.47%)</title><rect x="0.0697%" y="116" width="99.4664%" height="15" fill="rgb(230,116,27)" fg:x="32" fg:w="45666"/><text x="0.3197%" y="126.50">cust_evaluate (ea1_demo.py:59)</text></g><g><title>simulation (ea1_demo.py:54) (45,666 samples, 99.47%)</title><rect x="0.0697%" y="132" width="99.4664%" height="15" fill="rgb(228,99,48)" fg:x="32" fg:w="45666"/><text x="0.3197%" y="142.50">simulation (ea1_demo.py:54)</text></g><g><title>play (environment.py:606) (45,666 samples, 99.47%)</title><rect x="0.0697%" y="148" width="99.4664%" height="15" fill="rgb(253,11,6)" fg:x="32" fg:w="45666"/><text x="0.3197%" y="158.50">play (environment.py:606)</text></g><g><title>&lt;module&gt; (ea1_demo.py:3) (63 samples, 0.14%)</title><rect x="99.5361%" y="68" width="0.1372%" height="15" fill="rgb(247,143,39)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (63 samples, 0.14%)</title><rect x="99.5361%" y="84" width="0.1372%" height="15" fill="rgb(236,97,10)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (63 samples, 0.14%)</title><rect x="99.5361%" y="100" width="0.1372%" height="15" fill="rgb(233,208,19)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (63 samples, 0.14%)</title><rect x="99.5361%" y="116" width="0.1372%" height="15" fill="rgb(216,164,2)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (63 samples, 0.14%)</title><rect x="99.5361%" y="132" width="0.1372%" height="15" fill="rgb(220,129,5)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (63 samples, 0.14%)</title><rect x="99.5361%" y="148" width="0.1372%" height="15" fill="rgb(242,17,10)" fg:x="45698" fg:w="63"/><text x="99.7861%" y="158.50"></text></g><g><title>&lt;module&gt; (ea1_demo.py:6) (81 samples, 0.18%)</title><rect x="99.6733%" y="68" width="0.1764%" height="15" fill="rgb(242,107,0)" fg:x="45761" fg:w="81"/><text x="99.9233%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (81 samples, 0.18%)</title><rect x="99.6733%" y="84" width="0.1764%" height="15" fill="rgb(251,28,31)" fg:x="45761" fg:w="81"/><text x="99.9233%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (70 samples, 0.15%)</title><rect x="99.6972%" y="100" width="0.1525%" height="15" fill="rgb(233,223,10)" fg:x="45772" fg:w="70"/><text x="99.9472%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (70 samples, 0.15%)</title><rect x="99.6972%" y="116" width="0.1525%" height="15" fill="rgb(215,21,27)" fg:x="45772" fg:w="70"/><text x="99.9472%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (70 samples, 0.15%)</title><rect x="99.6972%" y="132" width="0.1525%" height="15" fill="rgb(232,23,21)" fg:x="45772" fg:w="70"/><text x="99.9472%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (70 samples, 0.15%)</title><rect x="99.6972%" y="148" width="0.1525%" height="15" fill="rgb(244,5,23)" fg:x="45772" fg:w="70"/><text x="99.9472%" y="158.50"></text></g><g><title>&lt;module&gt; (numba/__init__.py:19) (47 samples, 0.10%)</title><rect x="99.8497%" y="164" width="0.1024%" height="15" fill="rgb(226,81,46)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (47 samples, 0.10%)</title><rect x="99.8497%" y="180" width="0.1024%" height="15" fill="rgb(247,70,30)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (47 samples, 0.10%)</title><rect x="99.8497%" y="196" width="0.1024%" height="15" fill="rgb(212,68,19)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (47 samples, 0.10%)</title><rect x="99.8497%" y="212" width="0.1024%" height="15" fill="rgb(240,187,13)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (47 samples, 0.10%)</title><rect x="99.8497%" y="228" width="0.1024%" height="15" fill="rgb(223,113,26)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (47 samples, 0.10%)</title><rect x="99.8497%" y="244" width="0.1024%" height="15" fill="rgb(206,192,2)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (47 samples, 0.10%)</title><rect x="99.8497%" y="260" width="0.1024%" height="15" fill="rgb(241,108,4)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (47 samples, 0.10%)</title><rect x="99.8497%" y="276" width="0.1024%" height="15" fill="rgb(247,173,49)" fg:x="45842" fg:w="47"/><text x="100.0997%" y="286.50"></text></g><g><title>&lt;module&gt; (ea1_demo.py:7) (68 samples, 0.15%)</title><rect x="99.8497%" y="68" width="0.1481%" height="15" fill="rgb(224,114,35)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (68 samples, 0.15%)</title><rect x="99.8497%" y="84" width="0.1481%" height="15" fill="rgb(245,159,27)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (68 samples, 0.15%)</title><rect x="99.8497%" y="100" width="0.1481%" height="15" fill="rgb(245,172,44)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (68 samples, 0.15%)</title><rect x="99.8497%" y="116" width="0.1481%" height="15" fill="rgb(236,23,11)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (68 samples, 0.15%)</title><rect x="99.8497%" y="132" width="0.1481%" height="15" fill="rgb(205,117,38)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (68 samples, 0.15%)</title><rect x="99.8497%" y="148" width="0.1481%" height="15" fill="rgb(237,72,25)" fg:x="45842" fg:w="68"/><text x="100.0997%" y="158.50"></text></g><g><title>all (45,911 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,70,9)" fg:x="0" fg:w="45911"/><text x="0.2500%" y="62.50"></text></g></svg></svg>